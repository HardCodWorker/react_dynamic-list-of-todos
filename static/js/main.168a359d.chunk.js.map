{"version":3,"sources":["types/Sorttype.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Sorttype","TodoList","setmodalOn","setmodalTodo","todos","modalToDo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","sortType","setSortType","query","setQuery","value","onChange","event","target","all","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","showLoader","setshowLoader","currentUser","setCurrentUser","useEffect","userId","user","finally","href","email","name","App","loadOn","setLoadOn","setToDos","modalOn","todoos","displayTodos","filter","toLowerCase","includes","trim","preparedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.168a359d.chunk.js","sourcesContent":["export enum Sorttype {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n/* eslint-disable max-len */\ninterface Props {\n  todos: Todo[]\n  setmodalOn: (value: boolean) => void\n  setmodalTodo: (value: Todo) => void\n  modalToDo: Todo | null\n}\n\nexport const TodoList: React.FC<Props> = ({\n  setmodalOn,\n  setmodalTodo,\n  todos,\n  modalToDo,\n\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({ 'has-background-info-light': modalToDo?.id === todo.id })}\n            key={todo.id}\n          >\n\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setmodalOn(true);\n                  setmodalTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far',\n                    {\n                      'fa-eye-slash': modalToDo?.id === todo.id,\n                      'fa-eye': modalToDo?.id !== todo.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import { Sorttype } from '../../types/Sorttype';\n\ninterface Props {\n  sortType: string,\n  setSortType: (value: string) => void,\n  query: string,\n  setQuery: (value: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  sortType,\n  setSortType,\n  query,\n  setQuery,\n\n}) => {\n  return (\n\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={sortType}\n            onChange={(event) => setSortType(event.target.value)}\n          >\n            <option value=\"all\">{Sorttype.all}</option>\n            <option value=\"active\">{Sorttype.active}</option>\n            <option value=\"completed\">{Sorttype.completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {\n          query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n/* eslint-disable max-len */\n\ninterface Props {\n\n  modalToDo: Todo | null,\n  setmodalOn: (value: boolean) => void\n  setmodalTodo: (value: null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ modalToDo, setmodalOn, setmodalTodo }) => {\n  const [showLoader, setshowLoader] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>();\n\n  useEffect(() => {\n    if (modalToDo) {\n      setshowLoader(true);\n\n      getUser(modalToDo.userId).then(user => setCurrentUser(user)).finally(() => setshowLoader(false));\n    }\n  }, [modalToDo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {showLoader ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${modalToDo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setmodalOn(false);\n                setmodalTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {modalToDo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                modalToDo?.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n              {' by '}\n              <a href={`mailto:${currentUser?.email}`}>\n                {currentUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Sorttype } from './types/Sorttype';\n\nexport const App: React.FC = () => {\n  const [loadOn, setLoadOn] = useState(false);\n  const [todos, setToDos] = useState<Todo[]>([]);\n  const [modalOn, setmodalOn] = useState(false);\n  const [modalToDo, setmodalTodo] = useState<Todo | null>(null);\n  const [sortType, setSortType] = useState<string>(Sorttype.all);\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    setLoadOn(true);\n    getTodos().then(todoos => setToDos(todoos)).finally(() => setLoadOn(false));\n  }, []);\n\n  const preparedTodos = () => {\n    let displayTodos = [...todos];\n\n    if (query) {\n      displayTodos = displayTodos.filter(\n        todo => todo.title.toLowerCase()\n          .includes(query.toLowerCase().trim()),\n      );\n    }\n\n    switch (sortType) {\n      case Sorttype.active:\n        return displayTodos.filter(todo => !todo.completed);\n\n      case Sorttype.completed:\n        return displayTodos.filter(todo => todo.completed);\n\n      default:\n        break;\n    }\n\n    return displayTodos;\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortType={sortType}\n                setSortType={setSortType}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadOn ? <Loader />\n                : (\n                  <TodoList\n                    todos={preparedTodos()}\n                    setmodalOn={setmodalOn}\n                    setmodalTodo={setmodalTodo}\n                    modalToDo={modalToDo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {modalOn && (\n        <TodoModal\n          modalToDo={modalToDo}\n          setmodalOn={setmodalOn}\n          setmodalTodo={setmodalTodo}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}